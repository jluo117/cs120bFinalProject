
TempReader.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003c  00800100  00000b50  00000be4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b50  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000213  0080013c  0080013c  00000c20  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000c20  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c50  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00000c90  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000015d3  00000000  00000000  00000d68  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ad0  00000000  00000000  0000233b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000960  00000000  00000000  00002e0b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000248  00000000  00000000  0000376c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000700  00000000  00000000  000039b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000884  00000000  00000000  000040b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000100  00000000  00000000  00004938  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	35 c1       	rjmp	.+618    	; 0x26c <__ctors_end>
   2:	00 00       	nop
   4:	50 c1       	rjmp	.+672    	; 0x2a6 <__bad_interrupt>
   6:	00 00       	nop
   8:	4e c1       	rjmp	.+668    	; 0x2a6 <__bad_interrupt>
   a:	00 00       	nop
   c:	4c c1       	rjmp	.+664    	; 0x2a6 <__bad_interrupt>
   e:	00 00       	nop
  10:	4a c1       	rjmp	.+660    	; 0x2a6 <__bad_interrupt>
  12:	00 00       	nop
  14:	48 c1       	rjmp	.+656    	; 0x2a6 <__bad_interrupt>
  16:	00 00       	nop
  18:	46 c1       	rjmp	.+652    	; 0x2a6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	44 c1       	rjmp	.+648    	; 0x2a6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	42 c1       	rjmp	.+644    	; 0x2a6 <__bad_interrupt>
  22:	00 00       	nop
  24:	40 c1       	rjmp	.+640    	; 0x2a6 <__bad_interrupt>
  26:	00 00       	nop
  28:	3e c1       	rjmp	.+636    	; 0x2a6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3c c1       	rjmp	.+632    	; 0x2a6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	3a c1       	rjmp	.+628    	; 0x2a6 <__bad_interrupt>
  32:	00 00       	nop
  34:	38 c1       	rjmp	.+624    	; 0x2a6 <__bad_interrupt>
  36:	00 00       	nop
  38:	36 c1       	rjmp	.+620    	; 0x2a6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	34 c1       	rjmp	.+616    	; 0x2a6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	32 c1       	rjmp	.+612    	; 0x2a6 <__bad_interrupt>
  42:	00 00       	nop
  44:	30 c1       	rjmp	.+608    	; 0x2a6 <__bad_interrupt>
  46:	00 00       	nop
  48:	2e c1       	rjmp	.+604    	; 0x2a6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2c c1       	rjmp	.+600    	; 0x2a6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	2a c1       	rjmp	.+596    	; 0x2a6 <__bad_interrupt>
  52:	00 00       	nop
  54:	28 c1       	rjmp	.+592    	; 0x2a6 <__bad_interrupt>
  56:	00 00       	nop
  58:	26 c1       	rjmp	.+588    	; 0x2a6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	24 c1       	rjmp	.+584    	; 0x2a6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	22 c1       	rjmp	.+580    	; 0x2a6 <__bad_interrupt>
  62:	00 00       	nop
  64:	20 c1       	rjmp	.+576    	; 0x2a6 <__bad_interrupt>
  66:	00 00       	nop
  68:	1e c1       	rjmp	.+572    	; 0x2a6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1c c1       	rjmp	.+568    	; 0x2a6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	1a c1       	rjmp	.+564    	; 0x2a6 <__bad_interrupt>
  72:	00 00       	nop
  74:	18 c1       	rjmp	.+560    	; 0x2a6 <__bad_interrupt>
  76:	00 00       	nop
  78:	16 c1       	rjmp	.+556    	; 0x2a6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	14 c1       	rjmp	.+552    	; 0x2a6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	12 c1       	rjmp	.+548    	; 0x2a6 <__bad_interrupt>
  82:	00 00       	nop
  84:	10 c1       	rjmp	.+544    	; 0x2a6 <__bad_interrupt>
  86:	00 00       	nop
  88:	0e c1       	rjmp	.+540    	; 0x2a6 <__bad_interrupt>
	...

0000008c <CHARSET>:
  8c:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
  9c:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
  ac:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
  bc:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
  cc:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
  dc:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
  ec:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
  fc:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
 10c:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
 11c:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
 12c:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
 13c:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
 14c:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
 15c:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
 16c:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
 17c:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
 18c:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
 19c:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
 1ac:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
 1bc:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
 1cc:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
 1dc:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
 1ec:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
 1fc:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
 20c:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
 21c:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
 22c:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
 23c:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
 24c:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
 25c:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

0000026c <__ctors_end>:
 26c:	11 24       	eor	r1, r1
 26e:	1f be       	out	0x3f, r1	; 63
 270:	cf ef       	ldi	r28, 0xFF	; 255
 272:	d0 e4       	ldi	r29, 0x40	; 64
 274:	de bf       	out	0x3e, r29	; 62
 276:	cd bf       	out	0x3d, r28	; 61

00000278 <__do_copy_data>:
 278:	11 e0       	ldi	r17, 0x01	; 1
 27a:	a0 e0       	ldi	r26, 0x00	; 0
 27c:	b1 e0       	ldi	r27, 0x01	; 1
 27e:	e0 e5       	ldi	r30, 0x50	; 80
 280:	fb e0       	ldi	r31, 0x0B	; 11
 282:	00 e0       	ldi	r16, 0x00	; 0
 284:	0b bf       	out	0x3b, r16	; 59
 286:	02 c0       	rjmp	.+4      	; 0x28c <__do_copy_data+0x14>
 288:	07 90       	elpm	r0, Z+
 28a:	0d 92       	st	X+, r0
 28c:	ac 33       	cpi	r26, 0x3C	; 60
 28e:	b1 07       	cpc	r27, r17
 290:	d9 f7       	brne	.-10     	; 0x288 <__do_copy_data+0x10>

00000292 <__do_clear_bss>:
 292:	23 e0       	ldi	r18, 0x03	; 3
 294:	ac e3       	ldi	r26, 0x3C	; 60
 296:	b1 e0       	ldi	r27, 0x01	; 1
 298:	01 c0       	rjmp	.+2      	; 0x29c <.do_clear_bss_start>

0000029a <.do_clear_bss_loop>:
 29a:	1d 92       	st	X+, r1

0000029c <.do_clear_bss_start>:
 29c:	af 34       	cpi	r26, 0x4F	; 79
 29e:	b2 07       	cpc	r27, r18
 2a0:	e1 f7       	brne	.-8      	; 0x29a <.do_clear_bss_loop>
 2a2:	6b d2       	rcall	.+1238   	; 0x77a <main>
 2a4:	53 c4       	rjmp	.+2214   	; 0xb4c <_exit>

000002a6 <__bad_interrupt>:
 2a6:	ac ce       	rjmp	.-680    	; 0x0 <__vectors>

000002a8 <write>:
	_avr_timer_cntcurr--; // Count down to 0 rather than up to TOP
	if (_avr_timer_cntcurr == 0) { // results in a more efficient compare
		TimerISR(); // Call the ISR that the user uses
		_avr_timer_cntcurr = _avr_timer_M;
	}
}
 2a8:	29 98       	cbi	0x05, 1	; 5
 2aa:	66 23       	and	r22, r22
 2ac:	11 f0       	breq	.+4      	; 0x2b2 <write+0xa>
 2ae:	2b 9a       	sbi	0x05, 3	; 5
 2b0:	15 c0       	rjmp	.+42     	; 0x2dc <write+0x34>
 2b2:	2b 98       	cbi	0x05, 3	; 5
 2b4:	13 c0       	rjmp	.+38     	; 0x2dc <write+0x34>
 2b6:	ac 01       	movw	r20, r24
 2b8:	02 2e       	mov	r0, r18
 2ba:	02 c0       	rjmp	.+4      	; 0x2c0 <write+0x18>
 2bc:	55 95       	asr	r21
 2be:	47 95       	ror	r20
 2c0:	0a 94       	dec	r0
 2c2:	e2 f7       	brpl	.-8      	; 0x2bc <write+0x14>
 2c4:	40 ff       	sbrs	r20, 0
 2c6:	02 c0       	rjmp	.+4      	; 0x2cc <write+0x24>
 2c8:	2c 9a       	sbi	0x05, 4	; 5
 2ca:	01 c0       	rjmp	.+2      	; 0x2ce <write+0x26>
 2cc:	2c 98       	cbi	0x05, 4	; 5
 2ce:	2d 9a       	sbi	0x05, 5	; 5
 2d0:	2d 98       	cbi	0x05, 5	; 5
 2d2:	21 50       	subi	r18, 0x01	; 1
 2d4:	31 09       	sbc	r19, r1
 2d6:	78 f7       	brcc	.-34     	; 0x2b6 <write+0xe>
 2d8:	29 9a       	sbi	0x05, 1	; 5
 2da:	08 95       	ret
 2dc:	27 e0       	ldi	r18, 0x07	; 7
 2de:	30 e0       	ldi	r19, 0x00	; 0
 2e0:	90 e0       	ldi	r25, 0x00	; 0
 2e2:	e9 cf       	rjmp	.-46     	; 0x2b6 <write+0xe>

000002e4 <write_cmd>:
 2e4:	60 e0       	ldi	r22, 0x00	; 0
 2e6:	e0 cf       	rjmp	.-64     	; 0x2a8 <write>
 2e8:	08 95       	ret

000002ea <nokia_lcd_init>:
 2ea:	cf 93       	push	r28
 2ec:	df 93       	push	r29
 2ee:	21 9a       	sbi	0x04, 1	; 4
 2f0:	22 9a       	sbi	0x04, 2	; 4
 2f2:	23 9a       	sbi	0x04, 3	; 4
 2f4:	24 9a       	sbi	0x04, 4	; 4
 2f6:	25 9a       	sbi	0x04, 5	; 4
 2f8:	2a 9a       	sbi	0x05, 2	; 5
 2fa:	29 9a       	sbi	0x05, 1	; 5
 2fc:	83 ec       	ldi	r24, 0xC3	; 195
 2fe:	99 e0       	ldi	r25, 0x09	; 9
 300:	01 97       	sbiw	r24, 0x01	; 1
 302:	f1 f7       	brne	.-4      	; 0x300 <nokia_lcd_init+0x16>
 304:	00 c0       	rjmp	.+0      	; 0x306 <nokia_lcd_init+0x1c>
 306:	00 00       	nop
 308:	2a 98       	cbi	0x05, 2	; 5
 30a:	8b e5       	ldi	r24, 0x5B	; 91
 30c:	94 e4       	ldi	r25, 0x44	; 68
 30e:	01 97       	sbiw	r24, 0x01	; 1
 310:	f1 f7       	brne	.-4      	; 0x30e <nokia_lcd_init+0x24>
 312:	00 c0       	rjmp	.+0      	; 0x314 <nokia_lcd_init+0x2a>
 314:	00 00       	nop
 316:	2a 9a       	sbi	0x05, 2	; 5
 318:	29 98       	cbi	0x05, 1	; 5
 31a:	81 e2       	ldi	r24, 0x21	; 33
 31c:	e3 df       	rcall	.-58     	; 0x2e4 <write_cmd>
 31e:	83 e1       	ldi	r24, 0x13	; 19
 320:	e1 df       	rcall	.-62     	; 0x2e4 <write_cmd>
 322:	86 e0       	ldi	r24, 0x06	; 6
 324:	df df       	rcall	.-66     	; 0x2e4 <write_cmd>
 326:	82 ec       	ldi	r24, 0xC2	; 194
 328:	dd df       	rcall	.-70     	; 0x2e4 <write_cmd>
 32a:	80 e2       	ldi	r24, 0x20	; 32
 32c:	db df       	rcall	.-74     	; 0x2e4 <write_cmd>
 32e:	89 e0       	ldi	r24, 0x09	; 9
 330:	d9 df       	rcall	.-78     	; 0x2e4 <write_cmd>
 332:	80 e8       	ldi	r24, 0x80	; 128
 334:	d7 df       	rcall	.-82     	; 0x2e4 <write_cmd>
 336:	80 e4       	ldi	r24, 0x40	; 64
 338:	d5 df       	rcall	.-86     	; 0x2e4 <write_cmd>
 33a:	c8 ef       	ldi	r28, 0xF8	; 248
 33c:	d1 e0       	ldi	r29, 0x01	; 1
 33e:	61 e0       	ldi	r22, 0x01	; 1
 340:	80 e0       	ldi	r24, 0x00	; 0
 342:	b2 df       	rcall	.-156    	; 0x2a8 <write>
 344:	21 97       	sbiw	r28, 0x01	; 1
 346:	d9 f7       	brne	.-10     	; 0x33e <nokia_lcd_init+0x54>
 348:	88 e0       	ldi	r24, 0x08	; 8
 34a:	cc df       	rcall	.-104    	; 0x2e4 <write_cmd>
 34c:	8c e0       	ldi	r24, 0x0C	; 12
 34e:	ca df       	rcall	.-108    	; 0x2e4 <write_cmd>
 350:	df 91       	pop	r29
 352:	cf 91       	pop	r28
 354:	08 95       	ret

00000356 <nokia_lcd_clear>:
 356:	80 e8       	ldi	r24, 0x80	; 128
 358:	c5 df       	rcall	.-118    	; 0x2e4 <write_cmd>
 35a:	80 e4       	ldi	r24, 0x40	; 64
 35c:	c3 df       	rcall	.-122    	; 0x2e4 <write_cmd>
 35e:	10 92 3a 03 	sts	0x033A, r1	; 0x80033a <nokia_lcd+0x1f8>
 362:	10 92 3b 03 	sts	0x033B, r1	; 0x80033b <nokia_lcd+0x1f9>
 366:	e2 e4       	ldi	r30, 0x42	; 66
 368:	f1 e0       	ldi	r31, 0x01	; 1
 36a:	8a e3       	ldi	r24, 0x3A	; 58
 36c:	93 e0       	ldi	r25, 0x03	; 3
 36e:	11 92       	st	Z+, r1
 370:	e8 17       	cp	r30, r24
 372:	f9 07       	cpc	r31, r25
 374:	e1 f7       	brne	.-8      	; 0x36e <nokia_lcd_clear+0x18>
 376:	08 95       	ret

00000378 <nokia_lcd_set_pixel>:
 378:	26 2f       	mov	r18, r22
 37a:	26 95       	lsr	r18
 37c:	26 95       	lsr	r18
 37e:	26 95       	lsr	r18
 380:	90 e0       	ldi	r25, 0x00	; 0
 382:	34 e5       	ldi	r19, 0x54	; 84
 384:	23 9f       	mul	r18, r19
 386:	80 0d       	add	r24, r0
 388:	91 1d       	adc	r25, r1
 38a:	11 24       	eor	r1, r1
 38c:	44 23       	and	r20, r20
 38e:	79 f0       	breq	.+30     	; 0x3ae <nokia_lcd_set_pixel+0x36>
 390:	fc 01       	movw	r30, r24
 392:	ee 5b       	subi	r30, 0xBE	; 190
 394:	fe 4f       	sbci	r31, 0xFE	; 254
 396:	67 70       	andi	r22, 0x07	; 7
 398:	81 e0       	ldi	r24, 0x01	; 1
 39a:	90 e0       	ldi	r25, 0x00	; 0
 39c:	02 c0       	rjmp	.+4      	; 0x3a2 <nokia_lcd_set_pixel+0x2a>
 39e:	88 0f       	add	r24, r24
 3a0:	99 1f       	adc	r25, r25
 3a2:	6a 95       	dec	r22
 3a4:	e2 f7       	brpl	.-8      	; 0x39e <nokia_lcd_set_pixel+0x26>
 3a6:	90 81       	ld	r25, Z
 3a8:	89 2b       	or	r24, r25
 3aa:	80 83       	st	Z, r24
 3ac:	08 95       	ret
 3ae:	fc 01       	movw	r30, r24
 3b0:	ee 5b       	subi	r30, 0xBE	; 190
 3b2:	fe 4f       	sbci	r31, 0xFE	; 254
 3b4:	67 70       	andi	r22, 0x07	; 7
 3b6:	81 e0       	ldi	r24, 0x01	; 1
 3b8:	90 e0       	ldi	r25, 0x00	; 0
 3ba:	02 c0       	rjmp	.+4      	; 0x3c0 <nokia_lcd_set_pixel+0x48>
 3bc:	88 0f       	add	r24, r24
 3be:	99 1f       	adc	r25, r25
 3c0:	6a 95       	dec	r22
 3c2:	e2 f7       	brpl	.-8      	; 0x3bc <nokia_lcd_set_pixel+0x44>
 3c4:	80 95       	com	r24
 3c6:	90 81       	ld	r25, Z
 3c8:	89 23       	and	r24, r25
 3ca:	80 83       	st	Z, r24
 3cc:	08 95       	ret

000003ce <nokia_lcd_write_char>:
 3ce:	5f 92       	push	r5
 3d0:	6f 92       	push	r6
 3d2:	7f 92       	push	r7
 3d4:	8f 92       	push	r8
 3d6:	9f 92       	push	r9
 3d8:	af 92       	push	r10
 3da:	bf 92       	push	r11
 3dc:	cf 92       	push	r12
 3de:	df 92       	push	r13
 3e0:	ef 92       	push	r14
 3e2:	ff 92       	push	r15
 3e4:	0f 93       	push	r16
 3e6:	1f 93       	push	r17
 3e8:	cf 93       	push	r28
 3ea:	df 93       	push	r29
 3ec:	56 2e       	mov	r5, r22
 3ee:	26 2f       	mov	r18, r22
 3f0:	30 e0       	ldi	r19, 0x00	; 0
 3f2:	49 01       	movw	r8, r18
 3f4:	88 0c       	add	r8, r8
 3f6:	99 1c       	adc	r9, r9
 3f8:	88 0c       	add	r8, r8
 3fa:	99 1c       	adc	r9, r9
 3fc:	82 0e       	add	r8, r18
 3fe:	93 1e       	adc	r9, r19
 400:	18 14       	cp	r1, r8
 402:	19 04       	cpc	r1, r9
 404:	0c f0       	brlt	.+2      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 406:	59 c0       	rjmp	.+178    	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 408:	89 01       	movw	r16, r18
 40a:	00 0f       	add	r16, r16
 40c:	11 1f       	adc	r17, r17
 40e:	00 0f       	add	r16, r16
 410:	11 1f       	adc	r17, r17
 412:	00 0f       	add	r16, r16
 414:	11 1f       	adc	r17, r17
 416:	02 1b       	sub	r16, r18
 418:	13 0b       	sbc	r17, r19
 41a:	61 2c       	mov	r6, r1
 41c:	a8 2e       	mov	r10, r24
 41e:	b1 2c       	mov	r11, r1
 420:	c5 01       	movw	r24, r10
 422:	80 97       	sbiw	r24, 0x20	; 32
 424:	5c 01       	movw	r10, r24
 426:	aa 0c       	add	r10, r10
 428:	bb 1c       	adc	r11, r11
 42a:	aa 0c       	add	r10, r10
 42c:	bb 1c       	adc	r11, r11
 42e:	a8 0e       	add	r10, r24
 430:	b9 1e       	adc	r11, r25
 432:	0f 2e       	mov	r0, r31
 434:	fb e3       	ldi	r31, 0x3B	; 59
 436:	cf 2e       	mov	r12, r31
 438:	f3 e0       	ldi	r31, 0x03	; 3
 43a:	df 2e       	mov	r13, r31
 43c:	f0 2d       	mov	r31, r0
 43e:	0f 2e       	mov	r0, r31
 440:	fa e3       	ldi	r31, 0x3A	; 58
 442:	ef 2e       	mov	r14, r31
 444:	f3 e0       	ldi	r31, 0x03	; 3
 446:	ff 2e       	mov	r15, r31
 448:	f0 2d       	mov	r31, r0
 44a:	2a c0       	rjmp	.+84     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 44c:	fe 01       	movw	r30, r28
 44e:	24 91       	lpm	r18, Z
 450:	30 e0       	ldi	r19, 0x00	; 0
 452:	87 2d       	mov	r24, r7
 454:	65 2d       	mov	r22, r5
 456:	62 d2       	rcall	.+1220   	; 0x91c <__udivmodqi4>
 458:	02 c0       	rjmp	.+4      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 45a:	35 95       	asr	r19
 45c:	27 95       	ror	r18
 45e:	8a 95       	dec	r24
 460:	e2 f7       	brpl	.-8      	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 462:	20 ff       	sbrs	r18, 0
 464:	09 c0       	rjmp	.+18     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 466:	f6 01       	movw	r30, r12
 468:	60 81       	ld	r22, Z
 46a:	67 0d       	add	r22, r7
 46c:	f7 01       	movw	r30, r14
 46e:	80 81       	ld	r24, Z
 470:	41 e0       	ldi	r20, 0x01	; 1
 472:	86 0d       	add	r24, r6
 474:	81 df       	rcall	.-254    	; 0x378 <nokia_lcd_set_pixel>
 476:	08 c0       	rjmp	.+16     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 478:	f6 01       	movw	r30, r12
 47a:	60 81       	ld	r22, Z
 47c:	67 0d       	add	r22, r7
 47e:	f7 01       	movw	r30, r14
 480:	80 81       	ld	r24, Z
 482:	40 e0       	ldi	r20, 0x00	; 0
 484:	86 0d       	add	r24, r6
 486:	78 df       	rcall	.-272    	; 0x378 <nokia_lcd_set_pixel>
 488:	73 94       	inc	r7
 48a:	87 2d       	mov	r24, r7
 48c:	90 e0       	ldi	r25, 0x00	; 0
 48e:	80 17       	cp	r24, r16
 490:	91 07       	cpc	r25, r17
 492:	e4 f2       	brlt	.-72     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 494:	63 94       	inc	r6
 496:	86 2d       	mov	r24, r6
 498:	90 e0       	ldi	r25, 0x00	; 0
 49a:	88 15       	cp	r24, r8
 49c:	99 05       	cpc	r25, r9
 49e:	6c f4       	brge	.+26     	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 4a0:	10 16       	cp	r1, r16
 4a2:	11 06       	cpc	r1, r17
 4a4:	bc f7       	brge	.-18     	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
 4a6:	86 2d       	mov	r24, r6
 4a8:	65 2d       	mov	r22, r5
 4aa:	38 d2       	rcall	.+1136   	; 0x91c <__udivmodqi4>
 4ac:	e5 01       	movw	r28, r10
 4ae:	c8 0f       	add	r28, r24
 4b0:	d1 1d       	adc	r29, r1
 4b2:	c4 57       	subi	r28, 0x74	; 116
 4b4:	df 4f       	sbci	r29, 0xFF	; 255
 4b6:	71 2c       	mov	r7, r1
 4b8:	c9 cf       	rjmp	.-110    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 4ba:	80 91 3a 03 	lds	r24, 0x033A	; 0x80033a <nokia_lcd+0x1f8>
 4be:	91 e0       	ldi	r25, 0x01	; 1
 4c0:	98 0f       	add	r25, r24
 4c2:	85 2d       	mov	r24, r5
 4c4:	88 0f       	add	r24, r24
 4c6:	88 0f       	add	r24, r24
 4c8:	85 0d       	add	r24, r5
 4ca:	89 0f       	add	r24, r25
 4cc:	84 35       	cpi	r24, 0x54	; 84
 4ce:	18 f4       	brcc	.+6      	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4d0:	80 93 3a 03 	sts	0x033A, r24	; 0x80033a <nokia_lcd+0x1f8>
 4d4:	0e c0       	rjmp	.+28     	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 4d6:	10 92 3a 03 	sts	0x033A, r1	; 0x80033a <nokia_lcd+0x1f8>
 4da:	eb e3       	ldi	r30, 0x3B	; 59
 4dc:	f3 e0       	ldi	r31, 0x03	; 3
 4de:	80 81       	ld	r24, Z
 4e0:	91 e0       	ldi	r25, 0x01	; 1
 4e2:	98 0f       	add	r25, r24
 4e4:	85 2d       	mov	r24, r5
 4e6:	88 0f       	add	r24, r24
 4e8:	88 0f       	add	r24, r24
 4ea:	88 0f       	add	r24, r24
 4ec:	85 19       	sub	r24, r5
 4ee:	89 0f       	add	r24, r25
 4f0:	80 83       	st	Z, r24
 4f2:	80 91 3b 03 	lds	r24, 0x033B	; 0x80033b <nokia_lcd+0x1f9>
 4f6:	80 33       	cpi	r24, 0x30	; 48
 4f8:	20 f0       	brcs	.+8      	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
 4fa:	10 92 3a 03 	sts	0x033A, r1	; 0x80033a <nokia_lcd+0x1f8>
 4fe:	10 92 3b 03 	sts	0x033B, r1	; 0x80033b <nokia_lcd+0x1f9>
 502:	df 91       	pop	r29
 504:	cf 91       	pop	r28
 506:	1f 91       	pop	r17
 508:	0f 91       	pop	r16
 50a:	ff 90       	pop	r15
 50c:	ef 90       	pop	r14
 50e:	df 90       	pop	r13
 510:	cf 90       	pop	r12
 512:	bf 90       	pop	r11
 514:	af 90       	pop	r10
 516:	9f 90       	pop	r9
 518:	8f 90       	pop	r8
 51a:	7f 90       	pop	r7
 51c:	6f 90       	pop	r6
 51e:	5f 90       	pop	r5
 520:	08 95       	ret

00000522 <nokia_lcd_write_string>:
 522:	1f 93       	push	r17
 524:	cf 93       	push	r28
 526:	df 93       	push	r29
 528:	ec 01       	movw	r28, r24
 52a:	88 81       	ld	r24, Y
 52c:	88 23       	and	r24, r24
 52e:	39 f0       	breq	.+14     	; 0x53e <nokia_lcd_write_string+0x1c>
 530:	16 2f       	mov	r17, r22
 532:	21 96       	adiw	r28, 0x01	; 1
 534:	61 2f       	mov	r22, r17
 536:	4b df       	rcall	.-362    	; 0x3ce <nokia_lcd_write_char>
 538:	89 91       	ld	r24, Y+
 53a:	81 11       	cpse	r24, r1
 53c:	fb cf       	rjmp	.-10     	; 0x534 <nokia_lcd_write_string+0x12>
 53e:	df 91       	pop	r29
 540:	cf 91       	pop	r28
 542:	1f 91       	pop	r17
 544:	08 95       	ret

00000546 <nokia_lcd_render>:
 546:	0f 93       	push	r16
 548:	1f 93       	push	r17
 54a:	cf 93       	push	r28
 54c:	df 93       	push	r29
 54e:	80 e8       	ldi	r24, 0x80	; 128
 550:	c9 de       	rcall	.-622    	; 0x2e4 <write_cmd>
 552:	80 e4       	ldi	r24, 0x40	; 64
 554:	c7 de       	rcall	.-626    	; 0x2e4 <write_cmd>
 556:	c2 e4       	ldi	r28, 0x42	; 66
 558:	d1 e0       	ldi	r29, 0x01	; 1
 55a:	0a e3       	ldi	r16, 0x3A	; 58
 55c:	13 e0       	ldi	r17, 0x03	; 3
 55e:	61 e0       	ldi	r22, 0x01	; 1
 560:	89 91       	ld	r24, Y+
 562:	a2 de       	rcall	.-700    	; 0x2a8 <write>
 564:	c0 17       	cp	r28, r16
 566:	d1 07       	cpc	r29, r17
 568:	d1 f7       	brne	.-12     	; 0x55e <nokia_lcd_render+0x18>
 56a:	df 91       	pop	r29
 56c:	cf 91       	pop	r28
 56e:	1f 91       	pop	r17
 570:	0f 91       	pop	r16
 572:	08 95       	ret

00000574 <ADCInit>:
 574:	80 e4       	ldi	r24, 0x40	; 64
 576:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
 57a:	87 e8       	ldi	r24, 0x87	; 135
 57c:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 580:	08 95       	ret

00000582 <adc_read>:
 582:	ec e7       	ldi	r30, 0x7C	; 124
 584:	f0 e0       	ldi	r31, 0x00	; 0
 586:	90 81       	ld	r25, Z
 588:	98 7f       	andi	r25, 0xF8	; 248
 58a:	87 70       	andi	r24, 0x07	; 7
 58c:	89 2b       	or	r24, r25
 58e:	80 83       	st	Z, r24
 590:	ea e7       	ldi	r30, 0x7A	; 122
 592:	f0 e0       	ldi	r31, 0x00	; 0
 594:	80 81       	ld	r24, Z
 596:	80 64       	ori	r24, 0x40	; 64
 598:	80 83       	st	Z, r24
 59a:	80 81       	ld	r24, Z
 59c:	86 fd       	sbrc	r24, 6
 59e:	fd cf       	rjmp	.-6      	; 0x59a <adc_read+0x18>
 5a0:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 5a4:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 5a8:	08 95       	ret

000005aa <joystickState>:
 5aa:	cf 93       	push	r28
 5ac:	df 93       	push	r29
 5ae:	81 e0       	ldi	r24, 0x01	; 1
 5b0:	e8 df       	rcall	.-48     	; 0x582 <adc_read>
 5b2:	ec 01       	movw	r28, r24
 5b4:	80 e0       	ldi	r24, 0x00	; 0
 5b6:	e5 df       	rcall	.-54     	; 0x582 <adc_read>
 5b8:	cf 3f       	cpi	r28, 0xFF	; 255
 5ba:	83 e0       	ldi	r24, 0x03	; 3
 5bc:	d8 07       	cpc	r29, r24
 5be:	1c f0       	brlt	.+6      	; 0x5c6 <joystickState+0x1c>
 5c0:	10 92 47 03 	sts	0x0347, r1	; 0x800347 <Joystate>
 5c4:	0a c0       	rjmp	.+20     	; 0x5da <joystickState+0x30>
 5c6:	cd 32       	cpi	r28, 0x2D	; 45
 5c8:	d1 40       	sbci	r29, 0x01	; 1
 5ca:	24 f4       	brge	.+8      	; 0x5d4 <joystickState+0x2a>
 5cc:	81 e0       	ldi	r24, 0x01	; 1
 5ce:	80 93 47 03 	sts	0x0347, r24	; 0x800347 <Joystate>
 5d2:	03 c0       	rjmp	.+6      	; 0x5da <joystickState+0x30>
 5d4:	84 e0       	ldi	r24, 0x04	; 4
 5d6:	80 93 47 03 	sts	0x0347, r24	; 0x800347 <Joystate>
 5da:	df 91       	pop	r29
 5dc:	cf 91       	pop	r28
 5de:	08 95       	ret

000005e0 <TimerSet>:
 5e0:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <_avr_timer_M>
 5e4:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <_avr_timer_M+0x1>
 5e8:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <_avr_timer_M+0x2>
 5ec:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <_avr_timer_M+0x3>
 5f0:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <_avr_timer_cntcurr>
 5f4:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <_avr_timer_cntcurr+0x1>
 5f8:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <_avr_timer_cntcurr+0x2>
 5fc:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <_avr_timer_cntcurr+0x3>
 600:	08 95       	ret

00000602 <writeValues>:
const unsigned short PERIOD = 250;
void writeValues(int myValue){
 602:	cf 93       	push	r28
 604:	df 93       	push	r29
 606:	00 d0       	rcall	.+0      	; 0x608 <writeValues+0x6>
 608:	00 d0       	rcall	.+0      	; 0x60a <writeValues+0x8>
 60a:	1f 92       	push	r1
 60c:	cd b7       	in	r28, 0x3d	; 61
 60e:	de b7       	in	r29, 0x3e	; 62
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 610:	4a e0       	ldi	r20, 0x0A	; 10
 612:	be 01       	movw	r22, r28
 614:	6f 5f       	subi	r22, 0xFF	; 255
 616:	7f 4f       	sbci	r23, 0xFF	; 255
 618:	09 d2       	rcall	.+1042   	; 0xa2c <__itoa_ncheck>
	char snum[5];
	itoa(myValue, snum, 10);
	nokia_lcd_clear();
 61a:	9d de       	rcall	.-710    	; 0x356 <nokia_lcd_clear>
 61c:	61 e0       	ldi	r22, 0x01	; 1
	nokia_lcd_write_string("Armed",1);
 61e:	8c e0       	ldi	r24, 0x0C	; 12
 620:	91 e0       	ldi	r25, 0x01	; 1
 622:	7f df       	rcall	.-258    	; 0x522 <nokia_lcd_write_string>
 624:	10 92 3a 03 	sts	0x033A, r1	; 0x80033a <nokia_lcd+0x1f8>
		nokia_lcd_write_char(*str++, scale);
}

void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
	nokia_lcd.cursor_x = x;
 628:	8a e0       	ldi	r24, 0x0A	; 10
	nokia_lcd.cursor_y = y;
 62a:	80 93 3b 03 	sts	0x033B, r24	; 0x80033b <nokia_lcd+0x1f9>
 62e:	63 e0       	ldi	r22, 0x03	; 3
	nokia_lcd_set_cursor(0, 10);
	nokia_lcd_write_string(snum,3);
 630:	ce 01       	movw	r24, r28
 632:	01 96       	adiw	r24, 0x01	; 1
 634:	76 df       	rcall	.-276    	; 0x522 <nokia_lcd_write_string>
	nokia_lcd_render();
 636:	87 df       	rcall	.-242    	; 0x546 <nokia_lcd_render>
 638:	0f 90       	pop	r0
}
 63a:	0f 90       	pop	r0
 63c:	0f 90       	pop	r0
 63e:	0f 90       	pop	r0
 640:	0f 90       	pop	r0
 642:	df 91       	pop	r29
 644:	cf 91       	pop	r28
 646:	08 95       	ret

00000648 <WinValues>:
 648:	cf 93       	push	r28
void WinValues(int myValue){
 64a:	df 93       	push	r29
 64c:	00 d0       	rcall	.+0      	; 0x64e <WinValues+0x6>
 64e:	00 d0       	rcall	.+0      	; 0x650 <WinValues+0x8>
 650:	1f 92       	push	r1
 652:	cd b7       	in	r28, 0x3d	; 61
 654:	de b7       	in	r29, 0x3e	; 62
 656:	4a e0       	ldi	r20, 0x0A	; 10
 658:	be 01       	movw	r22, r28
 65a:	6f 5f       	subi	r22, 0xFF	; 255
 65c:	7f 4f       	sbci	r23, 0xFF	; 255
 65e:	e6 d1       	rcall	.+972    	; 0xa2c <__itoa_ncheck>
	char snum[5];
	itoa(myValue, snum, 10);
	nokia_lcd_clear();
 660:	7a de       	rcall	.-780    	; 0x356 <nokia_lcd_clear>
 662:	61 e0       	ldi	r22, 0x01	; 1
	nokia_lcd_write_string("Wins",1);
 664:	82 e1       	ldi	r24, 0x12	; 18
 666:	91 e0       	ldi	r25, 0x01	; 1
 668:	5c df       	rcall	.-328    	; 0x522 <nokia_lcd_write_string>
 66a:	10 92 3a 03 	sts	0x033A, r1	; 0x80033a <nokia_lcd+0x1f8>
		nokia_lcd_write_char(*str++, scale);
}

void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
	nokia_lcd.cursor_x = x;
 66e:	8a e0       	ldi	r24, 0x0A	; 10
	nokia_lcd.cursor_y = y;
 670:	80 93 3b 03 	sts	0x033B, r24	; 0x80033b <nokia_lcd+0x1f9>
 674:	63 e0       	ldi	r22, 0x03	; 3
	nokia_lcd_set_cursor(0, 10);
	nokia_lcd_write_string(snum,3);
 676:	ce 01       	movw	r24, r28
 678:	01 96       	adiw	r24, 0x01	; 1
 67a:	53 df       	rcall	.-346    	; 0x522 <nokia_lcd_write_string>
	nokia_lcd_render();
 67c:	64 df       	rcall	.-312    	; 0x546 <nokia_lcd_render>
 67e:	0f 90       	pop	r0
}
 680:	0f 90       	pop	r0
 682:	0f 90       	pop	r0
 684:	0f 90       	pop	r0
 686:	0f 90       	pop	r0
 688:	df 91       	pop	r29
 68a:	cf 91       	pop	r28
 68c:	08 95       	ret

0000068e <updateNum>:
 68e:	80 91 47 03 	lds	r24, 0x0347	; 0x800347 <Joystate>
void updateNum(){
	switch(Joystate){
 692:	88 23       	and	r24, r24
 694:	61 f0       	breq	.+24     	; 0x6ae <updateNum+0x20>
 696:	81 30       	cpi	r24, 0x01	; 1
 698:	99 f4       	brne	.+38     	; 0x6c0 <updateNum+0x32>
		case up:
		num++;
 69a:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <num>
 69e:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <num+0x1>
 6a2:	01 96       	adiw	r24, 0x01	; 1
 6a4:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <num+0x1>
 6a8:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <num>
		break;
 6ac:	09 c0       	rjmp	.+18     	; 0x6c0 <updateNum+0x32>
		case down:
		num--;
 6ae:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <num>
 6b2:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <num+0x1>
 6b6:	01 97       	sbiw	r24, 0x01	; 1
 6b8:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <num+0x1>
 6bc:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <num>
		break;
		default:
		break;
	}
	if (curNum >= 3){
 6c0:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <__data_end>
 6c4:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <__data_end+0x1>
 6c8:	83 30       	cpi	r24, 0x03	; 3
 6ca:	91 05       	cpc	r25, r1
 6cc:	cc f4       	brge	.+50     	; 0x700 <updateNum+0x72>
		return;
	}
	if (num == targetNum[curNum]){
 6ce:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <num>
 6d2:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <num+0x1>
 6d6:	fc 01       	movw	r30, r24
 6d8:	ee 0f       	add	r30, r30
 6da:	ff 1f       	adc	r31, r31
 6dc:	e0 5c       	subi	r30, 0xC0	; 192
 6de:	fc 4f       	sbci	r31, 0xFC	; 252
 6e0:	40 81       	ld	r20, Z
 6e2:	51 81       	ldd	r21, Z+1	; 0x01
 6e4:	42 17       	cp	r20, r18
 6e6:	53 07       	cpc	r21, r19
 6e8:	59 f4       	brne	.+22     	; 0x700 <updateNum+0x72>
		num = 100;
 6ea:	24 e6       	ldi	r18, 0x64	; 100
 6ec:	30 e0       	ldi	r19, 0x00	; 0
 6ee:	30 93 0b 01 	sts	0x010B, r19	; 0x80010b <num+0x1>
 6f2:	20 93 0a 01 	sts	0x010A, r18	; 0x80010a <num>
		curNum++;
 6f6:	01 96       	adiw	r24, 0x01	; 1
 6f8:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <__data_end+0x1>
 6fc:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <__data_end>
 700:	08 95       	ret

00000702 <resetGame>:
	}
}
void resetGame(){
 702:	cf 93       	push	r28
 704:	df 93       	push	r29
	resetTime = 0;
 706:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <resetTime+0x1>
 70a:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <resetTime>
	num = 100;
 70e:	84 e6       	ldi	r24, 0x64	; 100
 710:	90 e0       	ldi	r25, 0x00	; 0
 712:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <num+0x1>
 716:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <num>
	targetNum [0] =  (rand() % (totalTime))% (150 + 1 - 0);
 71a:	7a d1       	rcall	.+756    	; 0xa10 <rand>
 71c:	c0 e4       	ldi	r28, 0x40	; 64
 71e:	d3 e0       	ldi	r29, 0x03	; 3
 720:	60 91 3c 03 	lds	r22, 0x033C	; 0x80033c <totalTime>
 724:	70 91 3d 03 	lds	r23, 0x033D	; 0x80033d <totalTime+0x1>
 728:	05 d1       	rcall	.+522    	; 0x934 <__divmodhi4>
 72a:	67 e9       	ldi	r22, 0x97	; 151
 72c:	70 e0       	ldi	r23, 0x00	; 0
 72e:	02 d1       	rcall	.+516    	; 0x934 <__divmodhi4>
 730:	99 83       	std	Y+1, r25	; 0x01
 732:	88 83       	st	Y, r24
	targetNum [1] = (rand() % (totalTime)) % (50 + 1 - 0);
 734:	6d d1       	rcall	.+730    	; 0xa10 <rand>
 736:	60 91 3c 03 	lds	r22, 0x033C	; 0x80033c <totalTime>
 73a:	70 91 3d 03 	lds	r23, 0x033D	; 0x80033d <totalTime+0x1>
 73e:	fa d0       	rcall	.+500    	; 0x934 <__divmodhi4>
 740:	63 e3       	ldi	r22, 0x33	; 51
 742:	70 e0       	ldi	r23, 0x00	; 0
 744:	f7 d0       	rcall	.+494    	; 0x934 <__divmodhi4>
 746:	9b 83       	std	Y+3, r25	; 0x03
 748:	8a 83       	std	Y+2, r24	; 0x02
	targetNum[2] = (rand() % (totalTime)) % (100 + 1) + 70;
 74a:	62 d1       	rcall	.+708    	; 0xa10 <rand>
 74c:	60 91 3c 03 	lds	r22, 0x033C	; 0x80033c <totalTime>
 750:	70 91 3d 03 	lds	r23, 0x033D	; 0x80033d <totalTime+0x1>
 754:	ef d0       	rcall	.+478    	; 0x934 <__divmodhi4>
 756:	65 e6       	ldi	r22, 0x65	; 101
 758:	70 e0       	ldi	r23, 0x00	; 0
 75a:	ec d0       	rcall	.+472    	; 0x934 <__divmodhi4>
 75c:	8a 5b       	subi	r24, 0xBA	; 186
 75e:	9f 4f       	sbci	r25, 0xFF	; 255
 760:	9d 83       	std	Y+5, r25	; 0x05
 762:	8c 83       	std	Y+4, r24	; 0x04
 764:	10 92 4d 03 	sts	0x034D, r1	; 0x80034d <timePast+0x1>
	timePast = 0;
 768:	10 92 4c 03 	sts	0x034C, r1	; 0x80034c <timePast>
 76c:	10 92 3d 01 	sts	0x013D, r1	; 0x80013d <__data_end+0x1>
	curNum = 0;
 770:	10 92 3c 01 	sts	0x013C, r1	; 0x80013c <__data_end>
 774:	df 91       	pop	r29
 776:	cf 91       	pop	r28
}
 778:	08 95       	ret

0000077a <main>:
 77a:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <resetTime+0x1>
int main(void)
{
	resetTime = 0;
 77e:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <resetTime>
	totalTime = 0;
 782:	10 92 3d 03 	sts	0x033D, r1	; 0x80033d <totalTime+0x1>
 786:	10 92 3c 03 	sts	0x033C, r1	; 0x80033c <totalTime>
	ADCInit();
 78a:	f4 de       	rcall	.-536    	; 0x574 <ADCInit>
	targetNum [0] =  rand() % (150 + 1 - 0) + 0;
 78c:	41 d1       	rcall	.+642    	; 0xa10 <rand>
 78e:	c0 e4       	ldi	r28, 0x40	; 64
 790:	d3 e0       	ldi	r29, 0x03	; 3
 792:	67 e9       	ldi	r22, 0x97	; 151
 794:	70 e0       	ldi	r23, 0x00	; 0
 796:	ce d0       	rcall	.+412    	; 0x934 <__divmodhi4>
 798:	99 83       	std	Y+1, r25	; 0x01
 79a:	88 83       	st	Y, r24
	targetNum [1] = rand() % (50 + 1 - 0) + 0;
 79c:	39 d1       	rcall	.+626    	; 0xa10 <rand>
 79e:	63 e3       	ldi	r22, 0x33	; 51
 7a0:	70 e0       	ldi	r23, 0x00	; 0
 7a2:	c8 d0       	rcall	.+400    	; 0x934 <__divmodhi4>
 7a4:	9b 83       	std	Y+3, r25	; 0x03
 7a6:	8a 83       	std	Y+2, r24	; 0x02
	targetNum[2] = rand() % (100 + 1);
 7a8:	33 d1       	rcall	.+614    	; 0xa10 <rand>
 7aa:	65 e6       	ldi	r22, 0x65	; 101
 7ac:	70 e0       	ldi	r23, 0x00	; 0
 7ae:	c2 d0       	rcall	.+388    	; 0x934 <__divmodhi4>
 7b0:	9d 83       	std	Y+5, r25	; 0x05
 7b2:	8c 83       	std	Y+4, r24	; 0x04
 7b4:	10 92 4d 03 	sts	0x034D, r1	; 0x80034d <timePast+0x1>
	timePast = 0;
 7b8:	10 92 4c 03 	sts	0x034C, r1	; 0x80034c <timePast>
 7bc:	6a e0       	ldi	r22, 0x0A	; 10
	TimerSet(10);
 7be:	70 e0       	ldi	r23, 0x00	; 0
 7c0:	80 e0       	ldi	r24, 0x00	; 0
 7c2:	90 e0       	ldi	r25, 0x00	; 0
 7c4:	0d df       	rcall	.-486    	; 0x5e0 <TimerSet>
	DDRA = 0x00; PORTA = 0xFF; //Input //Ouptut
 7c6:	11 b8       	out	0x01, r1	; 1
 7c8:	8f ef       	ldi	r24, 0xFF	; 255
	DDRC = 0x00; PORTC = 0xFF; 
 7ca:	82 b9       	out	0x02, r24	; 2
 7cc:	17 b8       	out	0x07, r1	; 7
	nokia_lcd_init();
 7ce:	88 b9       	out	0x08, r24	; 8
 7d0:	8c dd       	rcall	.-1256   	; 0x2ea <nokia_lcd_init>
    nokia_lcd_clear();
 7d2:	c1 dd       	rcall	.-1150   	; 0x356 <nokia_lcd_clear>
 7d4:	61 e0       	ldi	r22, 0x01	; 1
    nokia_lcd_write_string("IT'S WORKING!",1);
 7d6:	87 e1       	ldi	r24, 0x17	; 23
 7d8:	91 e0       	ldi	r25, 0x01	; 1
 7da:	a3 de       	rcall	.-698    	; 0x522 <nokia_lcd_write_string>
 7dc:	10 92 3a 03 	sts	0x033A, r1	; 0x80033a <nokia_lcd+0x1f8>
		nokia_lcd_write_char(*str++, scale);
}

void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
	nokia_lcd.cursor_x = x;
 7e0:	8a e0       	ldi	r24, 0x0A	; 10
	nokia_lcd.cursor_y = y;
 7e2:	80 93 3b 03 	sts	0x033B, r24	; 0x80033b <nokia_lcd+0x1f9>
 7e6:	84 e6       	ldi	r24, 0x64	; 100
    nokia_lcd_set_cursor(0, 10);
    //nokia_lcd_write_string("Nice!", 3);
	writeValues(100);
 7e8:	90 e0       	ldi	r25, 0x00	; 0
 7ea:	0b df       	rcall	.-490    	; 0x602 <writeValues>
 7ec:	10 92 46 03 	sts	0x0346, r1	; 0x800346 <state>
	state = inGame;
 7f0:	10 92 3f 03 	sts	0x033F, r1	; 0x80033f <totalWins+0x1>
	char unsigned input = 0;
	totalWins = 0;
 7f4:	10 92 3e 03 	sts	0x033E, r1	; 0x80033e <totalWins>
 7f8:	0a e3       	ldi	r16, 0x3A	; 58
		nokia_lcd_write_char(*str++, scale);
}

void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
	nokia_lcd.cursor_x = x;
 7fa:	13 e0       	ldi	r17, 0x03	; 3
 7fc:	cb e3       	ldi	r28, 0x3B	; 59
	nokia_lcd.cursor_y = y;
 7fe:	d3 e0       	ldi	r29, 0x03	; 3
 800:	0f 2e       	mov	r0, r31
 802:	fa e0       	ldi	r31, 0x0A	; 10
 804:	ff 2e       	mov	r15, r31
 806:	f0 2d       	mov	r31, r0
 808:	68 94       	set
			if (curNum == 3){
				totalWins++;
				state = Win;
			}
			if (timePast >= 400){
				state = Lose;
 80a:	ee 24       	eor	r14, r14
 80c:	e1 f8       	bld	r14, 1
 80e:	cd de       	rcall	.-614    	; 0x5aa <joystickState>
	char unsigned input = 0;
	totalWins = 0;
    /* Replace with your application code */
    while (1) 
    {
		joystickState();
 810:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <totalTime>
		totalTime++;
 814:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <totalTime+0x1>
 818:	01 96       	adiw	r24, 0x01	; 1
 81a:	90 93 3d 03 	sts	0x033D, r25	; 0x80033d <totalTime+0x1>
 81e:	80 93 3c 03 	sts	0x033C, r24	; 0x80033c <totalTime>
 822:	80 91 46 03 	lds	r24, 0x0346	; 0x800346 <state>
		switch (state){
 826:	81 30       	cpi	r24, 0x01	; 1
 828:	89 f1       	breq	.+98     	; 0x88c <main+0x112>
 82a:	38 f0       	brcs	.+14     	; 0x83a <main+0xc0>
 82c:	82 30       	cpi	r24, 0x02	; 2
 82e:	09 f4       	brne	.+2      	; 0x832 <main+0xb8>
 830:	4a c0       	rjmp	.+148    	; 0x8c6 <main+0x14c>
 832:	83 30       	cpi	r24, 0x03	; 3
 834:	09 f4       	brne	.+2      	; 0x838 <main+0xbe>
 836:	64 c0       	rjmp	.+200    	; 0x900 <main+0x186>
 838:	ea cf       	rjmp	.-44     	; 0x80e <main+0x94>
			case inGame:
			updateNum();
 83a:	29 df       	rcall	.-430    	; 0x68e <updateNum>
 83c:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <num>
			writeValues(num);
 840:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <num+0x1>
 844:	de de       	rcall	.-580    	; 0x602 <writeValues>
 846:	80 91 4c 03 	lds	r24, 0x034C	; 0x80034c <timePast>
			timePast++;
 84a:	90 91 4d 03 	lds	r25, 0x034D	; 0x80034d <timePast+0x1>
 84e:	01 96       	adiw	r24, 0x01	; 1
 850:	90 93 4d 03 	sts	0x034D, r25	; 0x80034d <timePast+0x1>
 854:	80 93 4c 03 	sts	0x034C, r24	; 0x80034c <timePast>
 858:	20 91 3c 01 	lds	r18, 0x013C	; 0x80013c <__data_end>
			if (curNum == 3){
 85c:	30 91 3d 01 	lds	r19, 0x013D	; 0x80013d <__data_end+0x1>
 860:	23 30       	cpi	r18, 0x03	; 3
 862:	31 05       	cpc	r19, r1
 864:	69 f4       	brne	.+26     	; 0x880 <main+0x106>
 866:	20 91 3e 03 	lds	r18, 0x033E	; 0x80033e <totalWins>
				totalWins++;
 86a:	30 91 3f 03 	lds	r19, 0x033F	; 0x80033f <totalWins+0x1>
 86e:	2f 5f       	subi	r18, 0xFF	; 255
 870:	3f 4f       	sbci	r19, 0xFF	; 255
 872:	30 93 3f 03 	sts	0x033F, r19	; 0x80033f <totalWins+0x1>
 876:	20 93 3e 03 	sts	0x033E, r18	; 0x80033e <totalWins>
 87a:	21 e0       	ldi	r18, 0x01	; 1
 87c:	20 93 46 03 	sts	0x0346, r18	; 0x800346 <state>
				state = Win;
 880:	80 39       	cpi	r24, 0x90	; 144
 882:	91 40       	sbci	r25, 0x01	; 1
			}
			if (timePast >= 400){
 884:	24 f2       	brlt	.-120    	; 0x80e <main+0x94>
 886:	e0 92 46 03 	sts	0x0346, r14	; 0x800346 <state>
				state = Lose;
 88a:	c1 cf       	rjmp	.-126    	; 0x80e <main+0x94>
 88c:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <resetTime>
			}
			break;
		case Win:
		
		resetTime++;
 890:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <resetTime+0x1>
 894:	01 96       	adiw	r24, 0x01	; 1
 896:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <resetTime+0x1>
 89a:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <resetTime>
		if (resetTime > 15){
 89e:	40 97       	sbiw	r24, 0x10	; 16
 8a0:	24 f0       	brlt	.+8      	; 0x8aa <main+0x130>
			state = Score;
 8a2:	83 e0       	ldi	r24, 0x03	; 3
			continue;
 8a4:	80 93 46 03 	sts	0x0346, r24	; 0x800346 <state>
		}
		
		
		nokia_lcd_clear();
 8a8:	b2 cf       	rjmp	.-156    	; 0x80e <main+0x94>
		nokia_lcd_write_string("Defused",1);
 8aa:	55 dd       	rcall	.-1366   	; 0x356 <nokia_lcd_clear>
 8ac:	61 e0       	ldi	r22, 0x01	; 1
 8ae:	85 e2       	ldi	r24, 0x25	; 37
 8b0:	91 e0       	ldi	r25, 0x01	; 1
 8b2:	37 de       	rcall	.-914    	; 0x522 <nokia_lcd_write_string>
		nokia_lcd_write_char(*str++, scale);
}

void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
	nokia_lcd.cursor_x = x;
 8b4:	f8 01       	movw	r30, r16
 8b6:	10 82       	st	Z, r1
	nokia_lcd.cursor_y = y;
 8b8:	f8 82       	st	Y, r15
		nokia_lcd_set_cursor(0,10);
		nokia_lcd_write_string("Win", 3);
 8ba:	63 e0       	ldi	r22, 0x03	; 3
 8bc:	88 e3       	ldi	r24, 0x38	; 56
 8be:	91 e0       	ldi	r25, 0x01	; 1
 8c0:	30 de       	rcall	.-928    	; 0x522 <nokia_lcd_write_string>
		nokia_lcd_render();
 8c2:	41 de       	rcall	.-894    	; 0x546 <nokia_lcd_render>
 8c4:	a4 cf       	rjmp	.-184    	; 0x80e <main+0x94>
		
		break;
 8c6:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <resetTime>
		case Lose:
		resetTime++;
 8ca:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <resetTime+0x1>
 8ce:	01 96       	adiw	r24, 0x01	; 1
 8d0:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <resetTime+0x1>
 8d4:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <resetTime>
		if (resetTime > 15){
 8d8:	40 97       	sbiw	r24, 0x10	; 16
			state = Score;
 8da:	24 f0       	brlt	.+8      	; 0x8e4 <main+0x16a>
 8dc:	83 e0       	ldi	r24, 0x03	; 3
 8de:	80 93 46 03 	sts	0x0346, r24	; 0x800346 <state>
			continue;
		}
		
		nokia_lcd_clear();
 8e2:	95 cf       	rjmp	.-214    	; 0x80e <main+0x94>
		nokia_lcd_write_string("Exploded",1);
 8e4:	38 dd       	rcall	.-1424   	; 0x356 <nokia_lcd_clear>
 8e6:	61 e0       	ldi	r22, 0x01	; 1
 8e8:	8d e2       	ldi	r24, 0x2D	; 45
 8ea:	91 e0       	ldi	r25, 0x01	; 1
		nokia_lcd_write_char(*str++, scale);
}

void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
	nokia_lcd.cursor_x = x;
 8ec:	1a de       	rcall	.-972    	; 0x522 <nokia_lcd_write_string>
 8ee:	f8 01       	movw	r30, r16
	nokia_lcd.cursor_y = y;
 8f0:	10 82       	st	Z, r1
		nokia_lcd_set_cursor(0, 10);
		nokia_lcd_write_string("T Win", 3);
 8f2:	f8 82       	st	Y, r15
 8f4:	63 e0       	ldi	r22, 0x03	; 3
 8f6:	86 e3       	ldi	r24, 0x36	; 54
 8f8:	91 e0       	ldi	r25, 0x01	; 1
 8fa:	13 de       	rcall	.-986    	; 0x522 <nokia_lcd_write_string>
		nokia_lcd_render();
 8fc:	24 de       	rcall	.-952    	; 0x546 <nokia_lcd_render>
 8fe:	87 cf       	rjmp	.-242    	; 0x80e <main+0x94>
		
		break;
 900:	80 91 3e 03 	lds	r24, 0x033E	; 0x80033e <totalWins>
	
		case Score:
		WinValues(totalWins);
 904:	90 91 3f 03 	lds	r25, 0x033F	; 0x80033f <totalWins+0x1>
 908:	9f de       	rcall	.-706    	; 0x648 <WinValues>
 90a:	80 91 47 03 	lds	r24, 0x0347	; 0x800347 <Joystate>
		if (Joystate != still){
 90e:	84 30       	cpi	r24, 0x04	; 4
 910:	09 f4       	brne	.+2      	; 0x914 <main+0x19a>
 912:	7d cf       	rjmp	.-262    	; 0x80e <main+0x94>
 914:	f6 de       	rcall	.-532    	; 0x702 <resetGame>
 916:	10 92 46 03 	sts	0x0346, r1	; 0x800346 <state>
			resetGame();
 91a:	79 cf       	rjmp	.-270    	; 0x80e <main+0x94>

0000091c <__udivmodqi4>:
			state = inGame;
 91c:	99 1b       	sub	r25, r25
 91e:	79 e0       	ldi	r23, 0x09	; 9
 920:	04 c0       	rjmp	.+8      	; 0x92a <__udivmodqi4_ep>

00000922 <__udivmodqi4_loop>:
 922:	99 1f       	adc	r25, r25
 924:	96 17       	cp	r25, r22
 926:	08 f0       	brcs	.+2      	; 0x92a <__udivmodqi4_ep>
 928:	96 1b       	sub	r25, r22

0000092a <__udivmodqi4_ep>:
 92a:	88 1f       	adc	r24, r24
 92c:	7a 95       	dec	r23
 92e:	c9 f7       	brne	.-14     	; 0x922 <__udivmodqi4_loop>
 930:	80 95       	com	r24
 932:	08 95       	ret

00000934 <__divmodhi4>:
 934:	97 fb       	bst	r25, 7
 936:	07 2e       	mov	r0, r23
 938:	16 f4       	brtc	.+4      	; 0x93e <__divmodhi4+0xa>
 93a:	00 94       	com	r0
 93c:	06 d0       	rcall	.+12     	; 0x94a <__divmodhi4_neg1>
 93e:	77 fd       	sbrc	r23, 7
 940:	08 d0       	rcall	.+16     	; 0x952 <__divmodhi4_neg2>
 942:	0b d0       	rcall	.+22     	; 0x95a <__udivmodhi4>
 944:	07 fc       	sbrc	r0, 7
 946:	05 d0       	rcall	.+10     	; 0x952 <__divmodhi4_neg2>
 948:	3e f4       	brtc	.+14     	; 0x958 <__divmodhi4_exit>

0000094a <__divmodhi4_neg1>:
 94a:	90 95       	com	r25
 94c:	81 95       	neg	r24
 94e:	9f 4f       	sbci	r25, 0xFF	; 255
 950:	08 95       	ret

00000952 <__divmodhi4_neg2>:
 952:	70 95       	com	r23
 954:	61 95       	neg	r22
 956:	7f 4f       	sbci	r23, 0xFF	; 255

00000958 <__divmodhi4_exit>:
 958:	08 95       	ret

0000095a <__udivmodhi4>:
 95a:	aa 1b       	sub	r26, r26
 95c:	bb 1b       	sub	r27, r27
 95e:	51 e1       	ldi	r21, 0x11	; 17
 960:	07 c0       	rjmp	.+14     	; 0x970 <__udivmodhi4_ep>

00000962 <__udivmodhi4_loop>:
 962:	aa 1f       	adc	r26, r26
 964:	bb 1f       	adc	r27, r27
 966:	a6 17       	cp	r26, r22
 968:	b7 07       	cpc	r27, r23
 96a:	10 f0       	brcs	.+4      	; 0x970 <__udivmodhi4_ep>
 96c:	a6 1b       	sub	r26, r22
 96e:	b7 0b       	sbc	r27, r23

00000970 <__udivmodhi4_ep>:
 970:	88 1f       	adc	r24, r24
 972:	99 1f       	adc	r25, r25
 974:	5a 95       	dec	r21
 976:	a9 f7       	brne	.-22     	; 0x962 <__udivmodhi4_loop>
 978:	80 95       	com	r24
 97a:	90 95       	com	r25
 97c:	bc 01       	movw	r22, r24
 97e:	cd 01       	movw	r24, r26
 980:	08 95       	ret

00000982 <do_rand>:
 982:	8f 92       	push	r8
 984:	9f 92       	push	r9
 986:	af 92       	push	r10
 988:	bf 92       	push	r11
 98a:	cf 92       	push	r12
 98c:	df 92       	push	r13
 98e:	ef 92       	push	r14
 990:	ff 92       	push	r15
 992:	cf 93       	push	r28
 994:	df 93       	push	r29
 996:	ec 01       	movw	r28, r24
 998:	68 81       	ld	r22, Y
 99a:	79 81       	ldd	r23, Y+1	; 0x01
 99c:	8a 81       	ldd	r24, Y+2	; 0x02
 99e:	9b 81       	ldd	r25, Y+3	; 0x03
 9a0:	61 15       	cp	r22, r1
 9a2:	71 05       	cpc	r23, r1
 9a4:	81 05       	cpc	r24, r1
 9a6:	91 05       	cpc	r25, r1
 9a8:	21 f4       	brne	.+8      	; 0x9b2 <do_rand+0x30>
 9aa:	64 e2       	ldi	r22, 0x24	; 36
 9ac:	79 ed       	ldi	r23, 0xD9	; 217
 9ae:	8b e5       	ldi	r24, 0x5B	; 91
 9b0:	97 e0       	ldi	r25, 0x07	; 7
 9b2:	2d e1       	ldi	r18, 0x1D	; 29
 9b4:	33 ef       	ldi	r19, 0xF3	; 243
 9b6:	41 e0       	ldi	r20, 0x01	; 1
 9b8:	50 e0       	ldi	r21, 0x00	; 0
 9ba:	6b d0       	rcall	.+214    	; 0xa92 <__divmodsi4>
 9bc:	49 01       	movw	r8, r18
 9be:	5a 01       	movw	r10, r20
 9c0:	9b 01       	movw	r18, r22
 9c2:	ac 01       	movw	r20, r24
 9c4:	a7 ea       	ldi	r26, 0xA7	; 167
 9c6:	b1 e4       	ldi	r27, 0x41	; 65
 9c8:	80 d0       	rcall	.+256    	; 0xaca <__muluhisi3>
 9ca:	6b 01       	movw	r12, r22
 9cc:	7c 01       	movw	r14, r24
 9ce:	ac ee       	ldi	r26, 0xEC	; 236
 9d0:	b4 ef       	ldi	r27, 0xF4	; 244
 9d2:	a5 01       	movw	r20, r10
 9d4:	94 01       	movw	r18, r8
 9d6:	85 d0       	rcall	.+266    	; 0xae2 <__mulohisi3>
 9d8:	dc 01       	movw	r26, r24
 9da:	cb 01       	movw	r24, r22
 9dc:	8c 0d       	add	r24, r12
 9de:	9d 1d       	adc	r25, r13
 9e0:	ae 1d       	adc	r26, r14
 9e2:	bf 1d       	adc	r27, r15
 9e4:	b7 ff       	sbrs	r27, 7
 9e6:	03 c0       	rjmp	.+6      	; 0x9ee <do_rand+0x6c>
 9e8:	01 97       	sbiw	r24, 0x01	; 1
 9ea:	a1 09       	sbc	r26, r1
 9ec:	b0 48       	sbci	r27, 0x80	; 128
 9ee:	88 83       	st	Y, r24
 9f0:	99 83       	std	Y+1, r25	; 0x01
 9f2:	aa 83       	std	Y+2, r26	; 0x02
 9f4:	bb 83       	std	Y+3, r27	; 0x03
 9f6:	9f 77       	andi	r25, 0x7F	; 127
 9f8:	df 91       	pop	r29
 9fa:	cf 91       	pop	r28
 9fc:	ff 90       	pop	r15
 9fe:	ef 90       	pop	r14
 a00:	df 90       	pop	r13
 a02:	cf 90       	pop	r12
 a04:	bf 90       	pop	r11
 a06:	af 90       	pop	r10
 a08:	9f 90       	pop	r9
 a0a:	8f 90       	pop	r8
 a0c:	08 95       	ret

00000a0e <rand_r>:
 a0e:	b9 cf       	rjmp	.-142    	; 0x982 <do_rand>

00000a10 <rand>:
 a10:	80 e0       	ldi	r24, 0x00	; 0
 a12:	91 e0       	ldi	r25, 0x01	; 1
 a14:	b6 cf       	rjmp	.-148    	; 0x982 <do_rand>

00000a16 <srand>:
 a16:	a0 e0       	ldi	r26, 0x00	; 0
 a18:	b0 e0       	ldi	r27, 0x00	; 0
 a1a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 a1e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 a22:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
 a26:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
 a2a:	08 95       	ret

00000a2c <__itoa_ncheck>:
 a2c:	bb 27       	eor	r27, r27
 a2e:	4a 30       	cpi	r20, 0x0A	; 10
 a30:	31 f4       	brne	.+12     	; 0xa3e <__itoa_ncheck+0x12>
 a32:	99 23       	and	r25, r25
 a34:	22 f4       	brpl	.+8      	; 0xa3e <__itoa_ncheck+0x12>
 a36:	bd e2       	ldi	r27, 0x2D	; 45
 a38:	90 95       	com	r25
 a3a:	81 95       	neg	r24
 a3c:	9f 4f       	sbci	r25, 0xFF	; 255
 a3e:	01 c0       	rjmp	.+2      	; 0xa42 <__utoa_common>

00000a40 <__utoa_ncheck>:
 a40:	bb 27       	eor	r27, r27

00000a42 <__utoa_common>:
 a42:	fb 01       	movw	r30, r22
 a44:	55 27       	eor	r21, r21
 a46:	aa 27       	eor	r26, r26
 a48:	88 0f       	add	r24, r24
 a4a:	99 1f       	adc	r25, r25
 a4c:	aa 1f       	adc	r26, r26
 a4e:	a4 17       	cp	r26, r20
 a50:	10 f0       	brcs	.+4      	; 0xa56 <__utoa_common+0x14>
 a52:	a4 1b       	sub	r26, r20
 a54:	83 95       	inc	r24
 a56:	50 51       	subi	r21, 0x10	; 16
 a58:	b9 f7       	brne	.-18     	; 0xa48 <__utoa_common+0x6>
 a5a:	a0 5d       	subi	r26, 0xD0	; 208
 a5c:	aa 33       	cpi	r26, 0x3A	; 58
 a5e:	08 f0       	brcs	.+2      	; 0xa62 <__utoa_common+0x20>
 a60:	a9 5d       	subi	r26, 0xD9	; 217
 a62:	a1 93       	st	Z+, r26
 a64:	00 97       	sbiw	r24, 0x00	; 0
 a66:	79 f7       	brne	.-34     	; 0xa46 <__utoa_common+0x4>
 a68:	b1 11       	cpse	r27, r1
 a6a:	b1 93       	st	Z+, r27
 a6c:	11 92       	st	Z+, r1
 a6e:	cb 01       	movw	r24, r22
 a70:	00 c0       	rjmp	.+0      	; 0xa72 <strrev>

00000a72 <strrev>:
 a72:	dc 01       	movw	r26, r24
 a74:	fc 01       	movw	r30, r24
 a76:	67 2f       	mov	r22, r23
 a78:	71 91       	ld	r23, Z+
 a7a:	77 23       	and	r23, r23
 a7c:	e1 f7       	brne	.-8      	; 0xa76 <strrev+0x4>
 a7e:	32 97       	sbiw	r30, 0x02	; 2
 a80:	04 c0       	rjmp	.+8      	; 0xa8a <strrev+0x18>
 a82:	7c 91       	ld	r23, X
 a84:	6d 93       	st	X+, r22
 a86:	70 83       	st	Z, r23
 a88:	62 91       	ld	r22, -Z
 a8a:	ae 17       	cp	r26, r30
 a8c:	bf 07       	cpc	r27, r31
 a8e:	c8 f3       	brcs	.-14     	; 0xa82 <strrev+0x10>
 a90:	08 95       	ret

00000a92 <__divmodsi4>:
 a92:	05 2e       	mov	r0, r21
 a94:	97 fb       	bst	r25, 7
 a96:	16 f4       	brtc	.+4      	; 0xa9c <__divmodsi4+0xa>
 a98:	00 94       	com	r0
 a9a:	0f d0       	rcall	.+30     	; 0xaba <__negsi2>
 a9c:	57 fd       	sbrc	r21, 7
 a9e:	05 d0       	rcall	.+10     	; 0xaaa <__divmodsi4_neg2>
 aa0:	24 d0       	rcall	.+72     	; 0xaea <__udivmodsi4>
 aa2:	07 fc       	sbrc	r0, 7
 aa4:	02 d0       	rcall	.+4      	; 0xaaa <__divmodsi4_neg2>
 aa6:	46 f4       	brtc	.+16     	; 0xab8 <__divmodsi4_exit>
 aa8:	08 c0       	rjmp	.+16     	; 0xaba <__negsi2>

00000aaa <__divmodsi4_neg2>:
 aaa:	50 95       	com	r21
 aac:	40 95       	com	r20
 aae:	30 95       	com	r19
 ab0:	21 95       	neg	r18
 ab2:	3f 4f       	sbci	r19, 0xFF	; 255
 ab4:	4f 4f       	sbci	r20, 0xFF	; 255
 ab6:	5f 4f       	sbci	r21, 0xFF	; 255

00000ab8 <__divmodsi4_exit>:
 ab8:	08 95       	ret

00000aba <__negsi2>:
 aba:	90 95       	com	r25
 abc:	80 95       	com	r24
 abe:	70 95       	com	r23
 ac0:	61 95       	neg	r22
 ac2:	7f 4f       	sbci	r23, 0xFF	; 255
 ac4:	8f 4f       	sbci	r24, 0xFF	; 255
 ac6:	9f 4f       	sbci	r25, 0xFF	; 255
 ac8:	08 95       	ret

00000aca <__muluhisi3>:
 aca:	31 d0       	rcall	.+98     	; 0xb2e <__umulhisi3>
 acc:	a5 9f       	mul	r26, r21
 ace:	90 0d       	add	r25, r0
 ad0:	b4 9f       	mul	r27, r20
 ad2:	90 0d       	add	r25, r0
 ad4:	a4 9f       	mul	r26, r20
 ad6:	80 0d       	add	r24, r0
 ad8:	91 1d       	adc	r25, r1
 ada:	11 24       	eor	r1, r1
 adc:	08 95       	ret

00000ade <__mulshisi3>:
 ade:	b7 ff       	sbrs	r27, 7
 ae0:	f4 cf       	rjmp	.-24     	; 0xaca <__muluhisi3>

00000ae2 <__mulohisi3>:
 ae2:	f3 df       	rcall	.-26     	; 0xaca <__muluhisi3>
 ae4:	82 1b       	sub	r24, r18
 ae6:	93 0b       	sbc	r25, r19
 ae8:	08 95       	ret

00000aea <__udivmodsi4>:
 aea:	a1 e2       	ldi	r26, 0x21	; 33
 aec:	1a 2e       	mov	r1, r26
 aee:	aa 1b       	sub	r26, r26
 af0:	bb 1b       	sub	r27, r27
 af2:	fd 01       	movw	r30, r26
 af4:	0d c0       	rjmp	.+26     	; 0xb10 <__udivmodsi4_ep>

00000af6 <__udivmodsi4_loop>:
 af6:	aa 1f       	adc	r26, r26
 af8:	bb 1f       	adc	r27, r27
 afa:	ee 1f       	adc	r30, r30
 afc:	ff 1f       	adc	r31, r31
 afe:	a2 17       	cp	r26, r18
 b00:	b3 07       	cpc	r27, r19
 b02:	e4 07       	cpc	r30, r20
 b04:	f5 07       	cpc	r31, r21
 b06:	20 f0       	brcs	.+8      	; 0xb10 <__udivmodsi4_ep>
 b08:	a2 1b       	sub	r26, r18
 b0a:	b3 0b       	sbc	r27, r19
 b0c:	e4 0b       	sbc	r30, r20
 b0e:	f5 0b       	sbc	r31, r21

00000b10 <__udivmodsi4_ep>:
 b10:	66 1f       	adc	r22, r22
 b12:	77 1f       	adc	r23, r23
 b14:	88 1f       	adc	r24, r24
 b16:	99 1f       	adc	r25, r25
 b18:	1a 94       	dec	r1
 b1a:	69 f7       	brne	.-38     	; 0xaf6 <__udivmodsi4_loop>
 b1c:	60 95       	com	r22
 b1e:	70 95       	com	r23
 b20:	80 95       	com	r24
 b22:	90 95       	com	r25
 b24:	9b 01       	movw	r18, r22
 b26:	ac 01       	movw	r20, r24
 b28:	bd 01       	movw	r22, r26
 b2a:	cf 01       	movw	r24, r30
 b2c:	08 95       	ret

00000b2e <__umulhisi3>:
 b2e:	a2 9f       	mul	r26, r18
 b30:	b0 01       	movw	r22, r0
 b32:	b3 9f       	mul	r27, r19
 b34:	c0 01       	movw	r24, r0
 b36:	a3 9f       	mul	r26, r19
 b38:	70 0d       	add	r23, r0
 b3a:	81 1d       	adc	r24, r1
 b3c:	11 24       	eor	r1, r1
 b3e:	91 1d       	adc	r25, r1
 b40:	b2 9f       	mul	r27, r18
 b42:	70 0d       	add	r23, r0
 b44:	81 1d       	adc	r24, r1
 b46:	11 24       	eor	r1, r1
 b48:	91 1d       	adc	r25, r1
 b4a:	08 95       	ret

00000b4c <_exit>:
 b4c:	f8 94       	cli

00000b4e <__stop_program>:
 b4e:	ff cf       	rjmp	.-2      	; 0xb4e <__stop_program>
